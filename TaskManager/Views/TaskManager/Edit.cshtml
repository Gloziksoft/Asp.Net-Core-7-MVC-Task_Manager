@model TaskManager.Models.TaskManagerModels

@{
    ViewData["Title"] = "Edit";
    Func<string, string> getIconFileName = ViewBag.GetIconFileName;
}

<h1>Edit</h1>

<h3>Edit</h3>
<hr />
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReleaseDate" class="control-label"></label>
                <input asp-for="ReleaseDate" class="form-control" />
                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Task" class="control-label"></label>
                <textarea asp-for="Task" class="form-control" rows="4"></textarea> <!-- Use textarea for Task field -->
                <span asp-validation-for="Task" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <textarea asp-for="Notes" class="form-control" rows="4"></textarea> <!-- Use textarea for Notes field -->
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UploadedFile" class="control-label"></label>
                <div>
                    <input type="file" name="UploadedFile" class="form-control" />
                    @if (Model != null && !string.IsNullOrEmpty(Model.FilePath))
                    {
                        string fileType = System.IO.Path.GetExtension(Model.FilePath);
                        string iconFileName = getIconFileName(fileType); // Ensure getIconFileName is initialized properly

                        if (fileType.ToLower() == ".jpg" || fileType.ToLower() == ".jpeg" || fileType.ToLower() == ".png" || fileType.ToLower() == ".gif")
                        {
                            <img src="@Url.Content(Model.FilePath)" alt="Image" style="max-height: 100px; max-width: 100px;" />
                        }
                        else
                        {
                            <img src="~/images/@iconFileName" alt="File Icon" style="max-height: 100px; max-width: 100px;" />
                        }
                    }
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-3"></div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<br />

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}